{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gregorfartek/Documents/CodingGitHub/CodingLearning/BECOME A DEVELOPER in 5 Months/Zero To Mastery 2020/CSGO_app/csgo/src/components/TournamentList/TournamentList.js\";\nimport React from 'react';\nimport { Panel, PanelGroup, Button } from 'rsuite';\nimport 'rsuite/dist/styles/rsuite-dark.css';\n\nclass TournamentList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleApiCall = () => {\n      console.log(this.state.tournamentsArray[0][0].id);\n    };\n\n    this.state = {\n      isLoaded: false,\n      error: null,\n      tournamentsArray: [],\n      tournamentsList: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.pandascore.co/csgo/tournaments?page[size]=15&token=JA7Ng39D7acv1y9kU26iBrtVx_P72XlN8UZm67ICanRnauPvIDM').then(res => res.json()).then(data => {\n      console.log(data);\n      this.state.tournamentsList.push(data); //Format Tournaments DATA\n\n      const dataArray = data.map(obj => {\n        const tourObj = {};\n        tourObj[obj.id] = obj.id;\n        tourObj[obj.league.name] = obj.slug;\n        return tourObj;\n      }); // Push data to Array\n\n      this.setState({\n        isLoaded: true,\n        tournamentsArray: dataArray\n      });\n      console.log(this.state.tournamentsList);\n      console.log(this.state.tournamentsArray); // this.formatTournamentName();\n    }, //error handler\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      tournamentsArray,\n      tournamentsList\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PanelGroup, {\n          accordion: true,\n          bordered: true,\n          children: /*#__PURE__*/_jsxDEV(Panel, {\n            header: \"Grga\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: tournamentsList.map(tournament => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: tournamentList[0].id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 68\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default TournamentList;","map":{"version":3,"sources":["/Users/gregorfartek/Documents/CodingGitHub/CodingLearning/BECOME A DEVELOPER in 5 Months/Zero To Mastery 2020/CSGO_app/csgo/src/components/TournamentList/TournamentList.js"],"names":["React","Panel","PanelGroup","Button","TournamentList","Component","constructor","props","handleApiCall","console","log","state","tournamentsArray","id","isLoaded","error","tournamentsList","componentDidMount","fetch","then","res","json","data","push","dataArray","map","obj","tourObj","league","name","slug","setState","render","message","tournament","tournamentList"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,QAA1C;AACA,OAAO,oCAAP;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA4ClBC,aA5CkB,GA4CF,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,gBAAX,CAA4B,CAA5B,EAA+B,CAA/B,EAAkCC,EAA9C;AACH,KA9CiB;;AAEd,SAAKF,KAAL,GAAa;AACTG,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTH,MAAAA,gBAAgB,EAAE,EAHT;AAITI,MAAAA,eAAe,EAAE;AAJR,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,oHAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGKG,IAAD,IAAU;AACNb,MAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACA,WAAKX,KAAL,CAAWK,eAAX,CAA2BO,IAA3B,CAAgCD,IAAhC,EAFM,CAGN;;AACA,YAAME,SAAS,GAAGF,IAAI,CAACG,GAAL,CAASC,GAAG,IAAI;AAC9B,cAAMC,OAAO,GAAG,EAAhB;AACAA,QAAAA,OAAO,CAACD,GAAG,CAACb,EAAL,CAAP,GAAkBa,GAAG,CAACb,EAAtB;AACAc,QAAAA,OAAO,CAACD,GAAG,CAACE,MAAJ,CAAWC,IAAZ,CAAP,GAA2BH,GAAG,CAACI,IAA/B;AACA,eAAOH,OAAP;AACH,OALiB,CAAlB,CAJM,CAUN;;AACA,WAAKI,QAAL,CAAc;AACVjB,QAAAA,QAAQ,EAAE,IADA;AAEVF,QAAAA,gBAAgB,EAAEY;AAFR,OAAd;AAIAf,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWK,eAAvB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,gBAAvB,EAhBM,CAkBN;AACH,KAtBL,EAuBI;AACCG,IAAAA,KAAD,IAAW;AACP,WAAKgB,QAAL,CAAc;AACVjB,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA;AAFU,OAAd;AAIH,KA7BL;AA+BH;;AAMDiB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEjB,MAAAA,KAAF;AAASD,MAAAA,QAAT;AAAmBF,MAAAA,gBAAnB;AAAqCI,MAAAA;AAArC,QAA0D,KAAKL,KAArE;;AAEA,QAAII,KAAJ,EAAW;AACP,0BACI;AAAA,8BACYA,KAAK,CAACkB,OADlB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAND,MAMO,IAAI,CAACnB,QAAL,EAAe;AAClB,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANM,MAMA;AACH,0BACI;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,SAAS,MAArB;AAAsB,UAAA,QAAQ,MAA9B;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,MAAM,EAAC,MAAd;AAAA,mCACI;AAAA,wBAAKE,eAAe,CAACS,GAAhB,CAAoBS,UAAU,iBAAI;AAAA,0BAAOC,cAAc,CAAC,CAAD,CAAd,CAAkBtB;AAAzB;AAAA;AAAA;AAAA;AAAA,sBAAlC;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH;AACJ;;AA5EwC;;AAgF7C,eAAeT,cAAf","sourcesContent":["import React from 'react';\nimport { Panel, PanelGroup, Button } from 'rsuite';\nimport 'rsuite/dist/styles/rsuite-dark.css';\n\nclass TournamentList extends React.Component {\n    constructor(props){\n        super(props); \n        this.state = {\n            isLoaded: false,\n            error: null,\n            tournamentsArray: [],\n            tournamentsList: [],\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://api.pandascore.co/csgo/tournaments?page[size]=15&token=JA7Ng39D7acv1y9kU26iBrtVx_P72XlN8UZm67ICanRnauPvIDM')\n        .then(res => res.json())\n        .then (\n            (data) => {\n                console.log(data)\n                this.state.tournamentsList.push(data)\n                //Format Tournaments DATA\n                const dataArray = data.map(obj => { \n                    const tourObj = {};\n                    tourObj[obj.id] = obj.id\n                    tourObj[obj.league.name] = obj.slug;\n                    return tourObj\n                })\n                // Push data to Array\n                this.setState({\n                    isLoaded: true,\n                    tournamentsArray: dataArray\n                });\n                console.log(this.state.tournamentsList);\n                console.log(this.state.tournamentsArray)\n\n                // this.formatTournamentName();\n            },\n            //error handler\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                })\n            }\n        )\n    }\n    \n    handleApiCall = () => {\n        console.log(this.state.tournamentsArray[0][0].id)\n    }\n\n    render() {\n        const { error, isLoaded, tournamentsArray, tournamentsList  } = this.state\n\n        if (error) {\n            return (\n                <div> \n                    Error: {error.message}\n                </div>\n            )\n        } else if (!isLoaded) {\n            return(\n                <div>\n                    Loading...\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <PanelGroup accordion bordered>\n                        <Panel header=\"Grga\">\n                            <h3>{tournamentsList.map(tournament => <div>{ tournamentList[0].id }</div>)}</h3>\n                        </Panel>\n                    </PanelGroup> \n                </div>\n\n            )\n        }\n    }    \n    \n}\n\nexport default TournamentList "]},"metadata":{},"sourceType":"module"}